// Code generated by goa v3.1.1, DO NOT EDIT.
//
// create gRPC server encoders and decoders
//
// Command:
// $ goa gen crud/design

package server

import (
	"context"
	create "crud/gen/create"
	createpb "crud/gen/grpc/create/pb"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeCreateResponse encodes responses from the "create" service "create"
// endpoint.
func EncodeCreateResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.(*create.Blog)
	if !ok {
		return nil, goagrpc.ErrInvalidType("create", "create", "*create.Blog", v)
	}
	resp := NewCreateResponse(result)
	return resp, nil
}

// DecodeCreateRequest decodes requests sent to "create" service "create"
// endpoint.
func DecodeCreateRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *createpb.CreateRequest
		ok      bool
	)
	{
		if message, ok = v.(*createpb.CreateRequest); !ok {
			return nil, goagrpc.ErrInvalidType("create", "create", "*createpb.CreateRequest", v)
		}
		if err := ValidateCreateRequest(message); err != nil {
			return nil, err
		}
	}
	var payload *create.Blog
	{
		payload = NewCreatePayload(message)
	}
	return payload, nil
}

// EncodeListResponse encodes responses from the "create" service "list"
// endpoint.
func EncodeListResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.([]*create.Storedblog)
	if !ok {
		return nil, goagrpc.ErrInvalidType("create", "list", "[]*create.Storedblog", v)
	}
	resp := NewListResponse(result)
	return resp, nil
}

// EncodeRemoveResponse encodes responses from the "create" service "remove"
// endpoint.
func EncodeRemoveResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	resp := NewRemoveResponse()
	return resp, nil
}

// DecodeRemoveRequest decodes requests sent to "create" service "remove"
// endpoint.
func DecodeRemoveRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *createpb.RemoveRequest
		ok      bool
	)
	{
		if message, ok = v.(*createpb.RemoveRequest); !ok {
			return nil, goagrpc.ErrInvalidType("create", "remove", "*createpb.RemoveRequest", v)
		}
	}
	var payload *create.RemovePayload
	{
		payload = NewRemovePayload(message)
	}
	return payload, nil
}

// EncodeUpdateResponse encodes responses from the "create" service "update"
// endpoint.
func EncodeUpdateResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	resp := NewUpdateResponse()
	return resp, nil
}

// DecodeUpdateRequest decodes requests sent to "create" service "update"
// endpoint.
func DecodeUpdateRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *createpb.UpdateRequest
		ok      bool
	)
	{
		if message, ok = v.(*createpb.UpdateRequest); !ok {
			return nil, goagrpc.ErrInvalidType("create", "update", "*createpb.UpdateRequest", v)
		}
		if err := ValidateUpdateRequest(message); err != nil {
			return nil, err
		}
	}
	var payload *create.UpdatePayload
	{
		payload = NewUpdatePayload(message)
	}
	return payload, nil
}
