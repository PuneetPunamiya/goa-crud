// Code generated by goa v3.1.1, DO NOT EDIT.
//
// create gRPC server
//
// Command:
// $ goa gen crud/design

package server

import (
	"context"
	create "crud/gen/create"
	createpb "crud/gen/grpc/create/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the createpb.CreateServer interface.
type Server struct {
	CreateH goagrpc.UnaryHandler
	ListH   goagrpc.UnaryHandler
	RemoveH goagrpc.UnaryHandler
	UpdateH goagrpc.UnaryHandler
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the create service endpoints.
func New(e *create.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		CreateH: NewCreateHandler(e.Create, uh),
		ListH:   NewListHandler(e.List, uh),
		RemoveH: NewRemoveHandler(e.Remove, uh),
		UpdateH: NewUpdateHandler(e.Update, uh),
	}
}

// NewCreateHandler creates a gRPC handler which serves the "create" service
// "create" endpoint.
func NewCreateHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeCreateRequest, EncodeCreateResponse)
	}
	return h
}

// Create implements the "Create" method in createpb.CreateServer interface.
func (s *Server) Create(ctx context.Context, message *createpb.CreateRequest) (*createpb.CreateResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "create")
	ctx = context.WithValue(ctx, goa.ServiceKey, "create")
	resp, err := s.CreateH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*createpb.CreateResponse), nil
}

// NewListHandler creates a gRPC handler which serves the "create" service
// "list" endpoint.
func NewListHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, nil, EncodeListResponse)
	}
	return h
}

// List implements the "List" method in createpb.CreateServer interface.
func (s *Server) List(ctx context.Context, message *createpb.ListRequest) (*createpb.ListResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "list")
	ctx = context.WithValue(ctx, goa.ServiceKey, "create")
	resp, err := s.ListH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*createpb.ListResponse), nil
}

// NewRemoveHandler creates a gRPC handler which serves the "create" service
// "remove" endpoint.
func NewRemoveHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeRemoveRequest, EncodeRemoveResponse)
	}
	return h
}

// Remove implements the "Remove" method in createpb.CreateServer interface.
func (s *Server) Remove(ctx context.Context, message *createpb.RemoveRequest) (*createpb.RemoveResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "remove")
	ctx = context.WithValue(ctx, goa.ServiceKey, "create")
	resp, err := s.RemoveH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*createpb.RemoveResponse), nil
}

// NewUpdateHandler creates a gRPC handler which serves the "create" service
// "update" endpoint.
func NewUpdateHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeUpdateRequest, EncodeUpdateResponse)
	}
	return h
}

// Update implements the "Update" method in createpb.CreateServer interface.
func (s *Server) Update(ctx context.Context, message *createpb.UpdateRequest) (*createpb.UpdateResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "update")
	ctx = context.WithValue(ctx, goa.ServiceKey, "create")
	resp, err := s.UpdateH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*createpb.UpdateResponse), nil
}
